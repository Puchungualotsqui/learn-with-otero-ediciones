package views

templ Layout(body templ.Component) {
	<!DOCTYPE html>
<html lang="en" x-data>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://unpkg.com/htmx.org@2.0.7"></script>
  <script src="https://unpkg.com/alpinejs" defer></script>
  <link href="/static/css/output.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
</head>
<body class="h-screen w-screen flex items-center justify-center bg-black relative">
	<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
	<script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/es.js"></script>

	@body
	<script>
	function initFlatpickr() {
  flatpickr("#due-date", {
    dateFormat: "d/m/Y",
    altInput: true,
    altFormat: "d/m/Y",
    defaultDate: document.querySelector("#due-date")?.value || null,
    locale: flatpickr.l10ns.es,   // âœ… use the loaded Spanish locale
  });
}


 document.addEventListener("DOMContentLoaded", initFlatpickr);
 document.addEventListener("htmx:afterSwap", initFlatpickr);
</script>
<script>
function fileManager() {
  return {
    files: {},

    initExisting(urls) {
      urls.forEach(url => {
        const name = url.split('/').pop();
        this.files[name] = url;
      });
      this.syncUploads();
    },

    addFiles(list) {
      Array.from(list).forEach(f => {
        this.files[f.name] = f;
      });
      this.syncUploads();
    },

    remove(name) {
      delete this.files[name];
      this.syncUploads();
    },

    syncUploads() {
      const dt = new DataTransfer();
      for (const value of Object.values(this.files)) {
        if (value instanceof File) dt.items.add(value);
      }
      this.$refs.uploads.files = dt.files;
    }
  }
}
</script>

</body>
</html>

}
